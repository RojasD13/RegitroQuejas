# =============================================================================
# PRODUCTION CONFIGURATION
# =============================================================================

# 🔹 Configuración de PostgreSQL en Render (datos correctos)
spring.datasource.url=jdbc:postgresql://dpg-d2hupd7diees73cl-a.oregon-postgres.render.com:5432/registrodb_n686
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:springuser}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:HS3zPGTGBI3DgxShzh6tSwkLRCZfmIqF}
spring.datasource.driver-class-name=org.postgresql.Driver

# 🔹 Configuración JPA/Hibernate para producción
spring.jpa.hibernate.ddl-auto=${SPRING_JPA_HIBERNATE_DDL_AUTO:update}
spring.jpa.show-sql=${SPRING_JPA_SHOW_SQL:false}
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# 🔹 Puerto - Render puede asignar dinámicamente
server.port=${PORT:8080}

# 🔹 Thymeleaf optimizado para producción
spring.thymeleaf.cache=true
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=HTML
spring.thymeleaf.encoding=UTF-8

# 🔹 Logging optimizado para producción
logging.level.org.springframework.web=WARN
logging.level.org.hibernate.SQL=WARN
logging.level.org.hibernate.type=WARN
logging.level.root=INFO

# 🔹 Security headers (opcional pero recomendado)
server.error.include-stacktrace=never
server.error.include-message=never
